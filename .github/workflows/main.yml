name: CI/CD Pipeline 

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    # environment: Test Sample Secrets
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Tests and setup for Laravel
      - name: Setup PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo, pdo_mysql, curl, gd, xml, zip, sqlite
          coverage: none

      - name: Install Composer dependencies (Laravel)
        run: composer install --prefer-dist --no-progress 
        working-directory: ./server

      - name: List files for debugging
        run: ls -la ./server

      - name: Setup Laravel Environment
        run: |
          cp .env.example .env
          php artisan key:generate
        working-directory: ./server # make sure its the right directory 

      - name: Run Laravel migrations (using SQLite for testing)
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ${{ github.workspace }}/server/database/database.sqlite
          APP_ENV: testing # set environment to testing to prevent data loss
        run: |
          touch database/database.sqlite
          php artisan migrate --force 
        working-directory: ./server # make sure to update path

      #- name: Run Laravel tests
        #run: php artisan test
        #working-directory: ./server

      # Tests for Vue.js
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install npm dependencies (Vue.js)
        run: npm install

      - name: Run Vue.js tests
        run: npm run test
        working-directory: ./FRONTmain # find package.json file direc

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      # Build and push docler images 
      - name: Build and push API Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          context: 
          file: ./Dockerfile
          push: true
          tags: souhailchaiberras/mainproject1-api:latest
    
      - name: Build and push App Docker image
        uses: docker/build-push-action@v5.3.0
        with:
            context: ./server
            file: ./server/Dockerfile
            push: true
            tags: souhailchaiberras/mainproject1-app:latest
      
      # test deployment 
      - name: Deploy with Docker Compose
        run: |
          docker-compose pull
          docker-compose up -d

      
      